{"remainingRequest":"/home/donpiano/running-dinner-solver/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/donpiano/running-dinner-solver/src/components/Teams.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/donpiano/running-dinner-solver/src/components/Teams.vue","mtime":1574717101057},{"path":"/home/donpiano/running-dinner-solver/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnRoLAp0ZCB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiA4cHg7Cn0K"},{"version":3,"sources":["Teams.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+NA;AACA;AACA;AACA;AACA","file":"Teams.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"page\">\n    <h1>Select Kitchens & Create Teams</h1>\n    <p v-if=\"csv.length < 2\" class=\"alert alert-info\">\n      Here, people are assigned to random teams according to their\n      <b>distance to the city center</b>, depending if they have a\n      <b>kitchen and space</b>, a\n      <b>maybe kitchen</b>, and on their\n      <b>organization.</b>\n    </p>\n    <div class=\"card\" style=\"max-width: 40em; margin: 0 auto;\" v-if=\"csv.length > 2\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">\n          <span\n            v-if=\"noKitchenToSelect != 0\"\n          >You still have to select {{ noKitchenToSelect }} kitchens.</span>\n          <span v-else>You are good to go. Create Teams now.</span>\n        </h5>\n        <p class=\"card-text\">\n          <span v-if=\"noKitchenToSelect != 0\">You can also select kitchens by\n          <b>clicking on them on the map</b></span>.\n          <br />Maximum Distance from Center:\n          <input style=\"width: 60px\" v-model.number=\"maxDist\" type=\"number\" />km\n          <br />\n          <button\n            @click=\"preselectKitches\"\n            type=\"button\"\n            class=\"btn btn-primary\"\n          >Automatically pre-select kitchens in {{maxDist}} km radis</button>\n          <button :disabled=\"noKitchenToSelect != 0\" @click=\"createTeamIds\" type=\"button\" class=\"btn btn-primary\">Create Team IDs</button>\n        </p>\n      </div>\n    </div>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <v-client-table v-if=\"csv.length > 2\" :data=\"csv\" :options=\"{editableColumns:['teamId']}\" :columns=\"mapFields\">\n                <select slot=\"teamId\" slot-scope=\"{row, update}\" v-model=\"row.teamId\" @input=\"update\">\n                  <option v-for=\"n in (csv.length / 2)\" :key=\"n\" :value=\"n\">{{n}}</option>\n                </select>\n          </v-client-table>\n        </div>\n        <div class=\"col-sm\">\n          <div v-if=\"csv.length > 2\" style=\"height: 100%; width: 100%; margin: auto;\">\n            <l-map\n              style=\"height: 100%; width: 100%;margin: 20px;\"\n              :center=\"[49.872517,8.651333]\"\n              :zoom=\"currentZoom\"\n            >\n              <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" layer-type=\"base\" />\n              <l-marker\n                v-for=\"kitchen in kitchens\"\n                v-bind:key=\"kitchen.TeamId\"\n                :lat-lng=\"[kitchen.lat, kitchen.lon]\"\n                :title=\"kitchen.firstname\"\n                @click=\"toggleKitchen(kitchen)\"\n              >\n                <l-icon\n                  :icon-size=\"[20, 30]\"\n                  :icon-anchor=\"[10, 15]\"\n                  :icon-url=\"getIconFor(kitchen)\"\n                />\n                <l-tooltip :content=\"kitchen.firstname + ' <br> ' + kitchen.message\"></l-tooltip>\n              </l-marker>\n            </l-map>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { LMap, LTileLayer, LMarker, LTooltip, LIcon } from \"vue2-leaflet\";\n\nexport default {\n  name: \"Teams\",\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LTooltip,\n    LIcon\n  },\n  computed: {\n    kitchens: function() {\n      return this.csv.filter(x => {\n        return (\n          x.hasKitchen != \"Nein\" && x.lat != x.firstname && x.lon != x.firstname\n        );\n      });\n    },\n    selectedKitchens: function() {\n      return this.csv.filter(x => {\n        return x.kitchenUsed == \"Ja\";\n      });\n    },\n    noKitchenToSelect: function() {\n      return (this.csv.length / 2) - this.selectedKitchens.length;\n    }\n  },\n  data: function() {\n    return {\n      maxDist: 2,\n      cityCenter: [49.872517, 8.651333],\n      currentZoom: 13,\n      kitchen_yes_used_icon: require(\"../assets/kitchen_yes_used_icon.png\"),\n      kitchen_yes_unused_icon: require(\"../assets/kitchen_yes_unused_icon.png\"),\n      kitchen_maybe_used_icon: require(\"../assets/kitchen_maybe_used_icon.png\"),\n      kitchen_maybe_unused_icon: require(\"../assets/kitchen_maybe_unused_icon.png\"),\n      mapFields: [\n        \"firstname\",\n        \"lastname\",\n        \"organization\",\n        \"kitchenUsed\",\n        \"teamId\"\n      ],\n      csv: [\n        {\n          Vorname: \"test\",\n          Nachname: \"test\",\n          Organisation: \"test\",\n          Küche: \"test\"\n        }\n      ],\n      küchenMap: {\n        Ja: -1,\n        Nein: 1,\n        \"Wenn es nicht anders geht\": 0\n      }\n    };\n  },\n  methods: {\n    toggleKitchen(kitchen) {\n      if (kitchen.kitchenUsed == \"Ja\") {\n        kitchen.kitchenUsed = \"Nein\";\n      } else {\n        kitchen.kitchenUsed = \"Ja\";\n      }\n    },\n    getIconFor(kitchen) {\n      if (kitchen.kitchenUsed == \"Ja\") {\n        return kitchen.hasKitchen == \"Ja\"\n          ? this.kitchen_yes_used_icon\n          : this.kitchen_maybe_used_icon;\n      } else {\n        return kitchen.hasKitchen == \"Ja\"\n          ? this.kitchen_yes_unused_icon\n          : this.kitchen_maybe_unused_icon;\n      }\n    },\n    distance(lat1, lon1, lat2, lon2, unit) {\n      if (lat1 == lat2 && lon1 == lon2) {\n        return 0;\n      } else {\n        var radlat1 = (Math.PI * lat1) / 180;\n        var radlat2 = (Math.PI * lat2) / 180;\n        var theta = lon1 - lon2;\n        var radtheta = (Math.PI * theta) / 180;\n        var dist =\n          Math.sin(radlat1) * Math.sin(radlat2) +\n          Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n        if (dist > 1) {\n          dist = 1;\n        }\n        dist = Math.acos(dist);\n        dist = (dist * 180) / Math.PI;\n        dist = dist * 60 * 1.1515;\n        if (unit == \"K\") {\n          dist = dist * 1.609344;\n        }\n        if (unit == \"N\") {\n          dist = dist * 0.8684;\n        }\n        return dist;\n      }\n    },\n    preselectKitches() {\n      this.csv.forEach(x => {\n        if (\n          x.hasKitchen == \"Ja\" &&\n          this.distance(x.lat, x.lon, this.cityCenter[0], this.cityCenter[1]) <\n            2.0\n        ) {\n          x.kitchenUsed = \"Ja\";\n        } else {\n          x.kitchenUsed = \"Nein\";\n        }\n      });\n    },\n    peopleWithUsedUnusedKitches(used){\n      return this.csv.filter(x => {\n        return (\n          x.kitchenUsed == used\n        );\n      });\n    },\n    createTeamIds() {\n      let peopleWithKitchens = this.peopleWithUsedUnusedKitches(\"Ja\")\n      let peopleWithoutKitchens = this.peopleWithUsedUnusedKitches(\"Nein\")\n      let currentTeamId = 1;\n      peopleWithKitchens.forEach(x => {\n        x.teamId = currentTeamId;\n        currentTeamId += 1;\n      });\n      currentTeamId = 1;\n      peopleWithoutKitchens.forEach(x => {\n        x.teamId = currentTeamId;\n        currentTeamId += 1;\n      });\n      this.$store.commit(\"setCsv\", this.csv);\n    },\n    exportCsv() {}\n  },\n  mounted: function() {\n    if (this.$store.state.csv) {\n      this.csv = this.$store.state.csv;\n    }\n  }\n};\n</script>\n\n<style>\nth,\ntd {\n  text-align: left;\n  padding: 8px;\n}\n</style>\n"]}]}