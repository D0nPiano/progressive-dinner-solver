{"remainingRequest":"/home/donpiano/running-dinner-solver/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/donpiano/running-dinner-solver/src/components/Teams.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donpiano/running-dinner-solver/src/components/Teams.vue","mtime":1575236361059},{"path":"/home/donpiano/running-dinner-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IExNYXAsIExUaWxlTGF5ZXIsIExNYXJrZXIsIExUb29sdGlwLCBMSWNvbiB9IGZyb20gInZ1ZTItbGVhZmxldCI7CmltcG9ydCB7IGdsb2JhbEZ1bmN0aW9ucyB9IGZyb20gJy4vbWl4aW5zL2dsb2JhbEZ1bmN0aW9ucyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRlYW1zIiwKICBjb21wb25lbnRzOiB7CiAgICBMTWFwLAogICAgTFRpbGVMYXllciwKICAgIExNYXJrZXIsCiAgICBMVG9vbHRpcCwKICAgIExJY29uCiAgfSwKICBtaXhpbnM6IFtnbG9iYWxGdW5jdGlvbnNdLAogIGNvbXB1dGVkOiB7CiAgICBraXRjaGVuczogZnVuY3Rpb24oKSB7CiAgICAgIHJldHVybiB0aGlzLmNzdi5maWx0ZXIoeCA9PiB7CiAgICAgICAgcmV0dXJuICgKICAgICAgICAgIHguaGFzS2l0Y2hlbiAhPSAiTmVpbiIgJiYgeC5sYXQgIT0geC5maXJzdG5hbWUgJiYgeC5sb24gIT0geC5maXJzdG5hbWUKICAgICAgICApOwogICAgICB9KTsKICAgIH0sCiAgICBzZWxlY3RlZEtpdGNoZW5zOiBmdW5jdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuY3N2LmZpbHRlcih4ID0+IHsKICAgICAgICByZXR1cm4geC5raXRjaGVuVXNlZCA9PSAiSmEiOwogICAgICB9KTsKICAgIH0sCiAgICBub0tpdGNoZW5Ub1NlbGVjdDogZnVuY3Rpb24oKSB7CiAgICAgIHJldHVybiB0aGlzLmNzdi5sZW5ndGggLyAyIC0gdGhpcy5zZWxlY3RlZEtpdGNoZW5zLmxlbmd0aDsKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIHsKICAgICAgbWF4RGlzdDogMiwKICAgICAgY2l0eUNlbnRlcjogWzQ5Ljg3MjUxNywgOC42NTEzMzNdLAogICAgICBjdXJyZW50Wm9vbTogMTMsCiAgICAgIGtpdGNoZW5feWVzX3VzZWRfaWNvbjogcmVxdWlyZSgiLi4vYXNzZXRzL2tpdGNoZW5feWVzX3VzZWRfaWNvbi5wbmciKSwKICAgICAga2l0Y2hlbl95ZXNfdW51c2VkX2ljb246IHJlcXVpcmUoIi4uL2Fzc2V0cy9raXRjaGVuX3llc191bnVzZWRfaWNvbi5wbmciKSwKICAgICAga2l0Y2hlbl9tYXliZV91c2VkX2ljb246IHJlcXVpcmUoIi4uL2Fzc2V0cy9raXRjaGVuX21heWJlX3VzZWRfaWNvbi5wbmciKSwKICAgICAga2l0Y2hlbl9tYXliZV91bnVzZWRfaWNvbjogcmVxdWlyZSgiLi4vYXNzZXRzL2tpdGNoZW5fbWF5YmVfdW51c2VkX2ljb24ucG5nIiksCiAgICAgIG1hcEZpZWxkczogWyJmaXJzdG5hbWUiLCAibGFzdG5hbWUiLCAib3JnYW5pemF0aW9uIiwgImtpdGNoZW5Vc2VkIl0sCiAgICAgIGNzdjogW10sCiAgICAgIGvDvGNoZW5NYXA6IHsKICAgICAgICBKYTogLTEsCiAgICAgICAgTmVpbjogMSwKICAgICAgICAiV2VubiBlcyBuaWNodCBhbmRlcnMgZ2VodCI6IDAKICAgICAgfSwKICAgICAgcGVyc29uVG9DaGFuZ2VGcm9tOiAwLAogICAgICB0ZWFtSWRUb0NoYW5nZUZyb206IDAsCiAgICAgIGNoYW5nZWRQZXJzb246IDAsCiAgICAgIGNoYW5nZWRUbzogMCwKICAgICAgaGFzVGVhbUlkczogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVPdGhlclRlYW1NZW1iZXIoKSB7CiAgICAgIC8vIGNoYW5nZSB0aGUgcGVyc29uIHRoYXQgaXMgYWZmZWN0ZWQgYnkgdGhlIGNoYW5nZQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuY3N2Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKAogICAgICAgICAgdGhpcy5jc3ZbaV0udGVhbUlkID09IHRoaXMucGVyc29uVG9DaGFuZ2VGcm9tLnRlYW1JZCAmJgogICAgICAgICAgdGhpcy5jc3ZbaV0uZmlyc3RuYW1lID09IHRoaXMucGVyc29uVG9DaGFuZ2VGcm9tLmZpcnN0bmFtZQogICAgICAgICkgewogICAgICAgICAgY29uc29sZS5sb2coImNoYW5naW5nIiwgdGhpcy5jc3ZbaV0uZmlyc3RuYW1lKTsgLy9lc2xpbnQtZGlzYWJsZS1saW5lCiAgICAgICAgICB0aGlzLmNzdltpXS50ZWFtSWQgPSBwYXJzZUludCh0aGlzLnRlYW1JZFRvQ2hhbmdlKTsKICAgICAgICAgIHRoaXMucGVyc29uVG9DaGFuZ2VGcm9tID0gMDsKICAgICAgICAgIHRoaXMudGVhbUlkVG9DaGFuZ2UgPSAwOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CgogICAgICAvLyBkb3VibGUtY2hlY2sgdGhlIGNoYW5nZSBvZiB0aGUgcGVyc29uIHRoYXQgd2FzIGNoYW5nZWQKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNzdi5sZW5ndGg7IGkrKykgewogICAgICAgIGlmICgKICAgICAgICAgIHRoaXMuY3N2W2ldLmxhc3RuYW1lID09IHRoaXMuY2hhbmdlZFBlcnNvbi5sYXN0bmFtZSAmJgogICAgICAgICAgdGhpcy5jc3ZbaV0uZmlyc3RuYW1lID09IHRoaXMuY2hhbmdlZFBlcnNvbi5maXJzdG5hbWUKICAgICAgICApIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJkb3VibGUtY2hlY2sgdGhlIGNoYW5nZSBvZiIsIHRoaXMuY3N2W2ldLmZpcnN0bmFtZSk7IC8vZXNsaW50LWRpc2FibGUtbGluZQogICAgICAgICAgdGhpcy5jc3ZbaV0udGVhbUlkID0gcGFyc2VJbnQodGhpcy5jaGFuZ2VkVG8pOwogICAgICAgICAgdGhpcy5jaGFuZ2VkUGVyc29uID0gMDsKICAgICAgICAgIHRoaXMuY2hhbmdlZFRvID0gMDsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfQogICAgICB0aGlzLiRzdG9yZS5jb21taXQoInNldENzdiIsIHRoaXMuY3N2KTsKICAgIH0sCiAgICB1cGRhdGVUZWFtSWQoZSkgewogICAgICBsZXQgZm91bmRQZXJzb24gPSBmYWxzZTsKICAgICAgdGhpcy5jaGFuZ2VkUGVyc29uID0gZS5yb3c7IC8vIHNhdmUgdGhlIHBlcnNvbiB0aGF0IHdhcyBjaGFuZ2VkCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jc3YubGVuZ3RoOyBpKyspIHsKICAgICAgICAvLyBmaW5kIHRoZSBvdGhlciBwZXJzb24gd2l0aCB0aGUgdGVhbUlkIHRoYXQgaGFzIHRvIGJlIGNoYW5nZWQKICAgICAgICBpZiAoCiAgICAgICAgICB0aGlzLmNzdltpXS50ZWFtSWQgPT0gcGFyc2VJbnQoZS5uZXdWYWwpICYmCiAgICAgICAgICAodGhpcy5jc3ZbaV0uZmlyc3RuYW1lICE9IGUucm93LmZpcnN0bmFtZSB8fAogICAgICAgICAgICB0aGlzLmNzdltpXS5sYXN0bmFtZSAhPSBlLnJvdy5sYXN0bmFtZSkgJiYKICAgICAgICAgIHRoaXMuY3N2W2ldLmtpdGNoZW5Vc2VkID09IGUucm93LmtpdGNoZW5Vc2VkCiAgICAgICAgKSB7CiAgICAgICAgICBmb3VuZFBlcnNvbiA9IHRydWU7CiAgICAgICAgICB0aGlzLmNoYW5nZWRUbyA9IGUubmV3VmFsOwogICAgICAgICAgdGhpcy5wZXJzb25Ub0NoYW5nZUZyb20gPSB0aGlzLmNzdltpXTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfQogICAgICBpZiAoIWZvdW5kUGVyc29uKSB7CiAgICAgICAgLy8gV2UgZm91bmQgdGhlIG9yaWdpbmFsIHRlYW1JZCB2YWx1ZSBiZWZvcmUgaXQgd2FzIGNoYW5nZWQgLSBzYXZlIGl0CiAgICAgICAgdGhpcy50ZWFtSWRUb0NoYW5nZSA9IGUub2xkVmFsOwogICAgICB9CiAgICAgIHRoaXMudXBkYXRlT3RoZXJUZWFtTWVtYmVyKCk7CiAgICAgIHJldHVybjsKICAgIH0sCiAgICBnZXRUZWFtUGFydG5lcih0ZWFtSWQsIGtpdGNoZW5Vc2VkKSB7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jc3YubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAoCiAgICAgICAgICB0aGlzLmNzdltpXS50ZWFtSWQgPT0gdGVhbUlkICYmCiAgICAgICAgICB0aGlzLmNzdltpXS5raXRjaGVuVXNlZCAhPSBraXRjaGVuVXNlZAogICAgICAgICkgewogICAgICAgICAgcmV0dXJuIHRoaXMuY3N2W2ldOwogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gIm5vb25lIjsKICAgIH0sCiAgICB0b2dnbGVLaXRjaGVuKGtpdGNoZW4pIHsKICAgICAgaWYgKHRoaXMuaGFzVGVhbUlkcyl7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGlmIChraXRjaGVuLmtpdGNoZW5Vc2VkID09ICJKYSIpIHsKICAgICAgICBraXRjaGVuLmtpdGNoZW5Vc2VkID0gIk5laW4iOwogICAgICB9IGVsc2UgewogICAgICAgIGtpdGNoZW4ua2l0Y2hlblVzZWQgPSAiSmEiOwogICAgICB9CiAgICB9LAogICAgZ2V0SWNvbkZvcihraXRjaGVuKSB7CiAgICAgIGlmIChraXRjaGVuLmtpdGNoZW5Vc2VkID09ICJKYSIpIHsKICAgICAgICByZXR1cm4ga2l0Y2hlbi5oYXNLaXRjaGVuID09ICJKYSIKICAgICAgICAgID8gdGhpcy5raXRjaGVuX3llc191c2VkX2ljb24KICAgICAgICAgIDogdGhpcy5raXRjaGVuX21heWJlX3VzZWRfaWNvbjsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4ga2l0Y2hlbi5oYXNLaXRjaGVuID09ICJKYSIKICAgICAgICAgID8gdGhpcy5raXRjaGVuX3llc191bnVzZWRfaWNvbgogICAgICAgICAgOiB0aGlzLmtpdGNoZW5fbWF5YmVfdW51c2VkX2ljb247CiAgICAgIH0KICAgIH0sCiAgICBwcmVzZWxlY3RLaXRjaGVzKCkgewogICAgICB0aGlzLmNzdi5mb3JFYWNoKHggPT4gewogICAgICAgIGlmICgKICAgICAgICAgIHguaGFzS2l0Y2hlbiA9PSAiSmEiICYmCiAgICAgICAgICB0aGlzLmRpc3RhbmNlKHgubGF0LCB4LmxvbiwgdGhpcy5jaXR5Q2VudGVyWzBdLCB0aGlzLmNpdHlDZW50ZXJbMV0pIDwKICAgICAgICAgICAgdGhpcy5tYXhEaXN0CiAgICAgICAgKSB7CiAgICAgICAgICB4LmtpdGNoZW5Vc2VkID0gIkphIjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgeC5raXRjaGVuVXNlZCA9ICJOZWluIjsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHBlb3BsZVdpdGhVc2VkVW51c2VkS2l0Y2hlcyh1c2VkKSB7CiAgICAgIHJldHVybiB0aGlzLmNzdi5maWx0ZXIoeCA9PiB7CiAgICAgICAgcmV0dXJuIHgua2l0Y2hlblVzZWQgPT0gdXNlZDsKICAgICAgfSk7CiAgICB9LAogICAgY3JlYXRlVGVhbUlkcygpIHsKICAgICAgbGV0IHBlb3BsZVdpdGhLaXRjaGVucyA9IHRoaXMucGVvcGxlV2l0aFVzZWRVbnVzZWRLaXRjaGVzKCJKYSIpOwogICAgICBsZXQgcGVvcGxlV2l0aG91dEtpdGNoZW5zID0gdGhpcy5wZW9wbGVXaXRoVXNlZFVudXNlZEtpdGNoZXMoIk5laW4iKTsKICAgICAgbGV0IGN1cnJlbnRUZWFtSWQgPSAxOwogICAgICBwZW9wbGVXaXRoS2l0Y2hlbnMuZm9yRWFjaCh4ID0+IHsKICAgICAgICB4LnRlYW1JZCA9IGN1cnJlbnRUZWFtSWQ7CiAgICAgICAgY3VycmVudFRlYW1JZCArPSAxOwogICAgICB9KTsKICAgICAgY3VycmVudFRlYW1JZCA9IDE7CiAgICAgIHBlb3BsZVdpdGhvdXRLaXRjaGVucy5mb3JFYWNoKHggPT4gewogICAgICAgIHgudGVhbUlkID0gY3VycmVudFRlYW1JZDsKICAgICAgICBjdXJyZW50VGVhbUlkICs9IDE7CiAgICAgIH0pOwogICAgICB0aGlzLmhhc1RlYW1JZHMgPSB0cnVlOwogICAgICB0aGlzLm1hcEZpZWxkcy5wdXNoKCJ0ZWFtSWQiKTsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJzZXRDc3YiLCB0aGlzLmNzdik7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbigpIHsKICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS5jc3YpIHsKICAgICAgdGhpcy5jc3YgPSB0aGlzLiRzdG9yZS5zdGF0ZS5jc3Y7CiAgICAgIHRoaXMuaGFzVGVhbUlkcyA9IHRoaXMuJHN0b3JlLnN0YXRlLmhhc1RlYW1JZHM7CiAgICAgIGlmICh0aGlzLmhhc1RlYW1JZHMpIHsKICAgICAgICB0aGlzLm1hcEZpZWxkcy5wdXNoKCJ0ZWFtSWQiKTsKICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["Teams.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Teams.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"page\">\n    <h1>Select Kitchens & Create Teams</h1>\n    <p class=\"alert alert-success\" v-if=\"hasTeamIds\">\n      Great! Go on and <a href=\"#\" @click=\"$store.commit('setCurrentPage', 'assignments')\">create a route for your newly selected teams!</a>\n    </p>\n    <p v-if=\"csv.length < 2\" class=\"alert alert-info\">\n      Here, people are assigned to random teams according to their\n      <b>distance to the city center</b>, depending if they have a\n      <b>kitchen and space</b>, a\n      <b>maybe kitchen</b>, and on their\n      <b>organization.</b>\n    </p>\n    <div class=\"card\" style=\"max-width: 40em; margin: 0 auto;\" v-if=\"csv.length > 0 && !hasTeamIds\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">\n          <span\n            v-if=\"noKitchenToSelect != 0\"\n          >You still have to select {{ noKitchenToSelect }} kitchens.</span>\n          <span v-else-if=\"!hasTeamIds\">You are good to go. Create Teams now.</span>\n          <span v-else>You are good to go. Go on with the Assignments!</span>\n        </h5>\n        <p class=\"card-text\">\n          <span v-if=\"!hasTeamIds\">\n            <span v-if=\"noKitchenToSelect != 0\">\n              You can also select kitchens by\n              <b>clicking on them on the map</b>\n            </span>.\n            <br />Maximum Distance from Center:\n            <input\n              style=\"width: 60px\"\n              v-model.number=\"maxDist\"\n              type=\"number\"\n            />km\n            <br />\n          </span>\n          <button\n            @click=\"preselectKitches\"\n            type=\"button\"\n            class=\"btn btn-primary\"\n            v-if=\"!hasTeamIds\"\n          >Automatically pre-select kitchens in {{maxDist}} km radis</button>\n          <button\n            v-if=\"!hasTeamIds\"\n            :disabled=\"noKitchenToSelect != 0\"\n            @click=\"createTeamIds\"\n            type=\"button\"\n            class=\"btn btn-primary\"\n          >Create Team IDs</button>\n        </p>\n      </div>\n    </div>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <v-client-table\n            v-if=\"csv.length > 0\"\n            ref=\"table\"\n            @update=\"updateTeamId\"\n            :data=\"csv\"\n            :options=\"{editableColumns:['teamId']}\"\n            :columns=\"mapFields\"\n          >\n            <div \n              slot=\"teamId\"\n              slot-scope=\"{row, update}\"\n              :style=\"{'background-color': getTeamColor(row.teamId, 0), 'padding': '5px'}\">\n              <select\n              v-model=\"row.teamId\"\n              @input=\"update(row.teamId)\"\n              @change=\"update(row.teamId)\"\n            >\n              <option\n                v-for=\"n in (csv.length / 2)\"\n                :key=\"n\"\n                :value=\"n\"\n              >{{n}} with {{getTeamPartner(n, row.kitchenUsed).firstname}}</option>\n            </select>\n            </div>\n            \n          </v-client-table>\n        </div>\n        <div class=\"col-sm\">\n          <div v-if=\"csv.length > 0\" style=\"height: 100%; width: 100%; margin: auto;\">\n            <l-map\n              style=\"height: 100%; width: 100%;margin: 20px;\"\n              :center=\"[49.872517,8.651333]\"\n              :zoom=\"currentZoom\"\n            >\n              <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" layer-type=\"base\" />\n              <l-marker\n                v-for=\"kitchen in kitchens\"\n                v-bind:key=\"kitchen.TeamId\"\n                :lat-lng=\"[kitchen.lat, kitchen.lon]\"\n                :title=\"kitchen.firstname\"\n                @click=\"toggleKitchen(kitchen)\"\n              >\n                <l-icon\n                  :icon-size=\"[20, 30]\"\n                  :icon-anchor=\"[10, 15]\"\n                  :icon-url=\"getIconFor(kitchen)\"\n                />\n                <l-tooltip :content=\"kitchen.firstname + ' <br> ' + kitchen.message\"></l-tooltip>\n              </l-marker>\n            </l-map>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { LMap, LTileLayer, LMarker, LTooltip, LIcon } from \"vue2-leaflet\";\nimport { globalFunctions } from './mixins/globalFunctions';\n\nexport default {\n  name: \"Teams\",\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LTooltip,\n    LIcon\n  },\n  mixins: [globalFunctions],\n  computed: {\n    kitchens: function() {\n      return this.csv.filter(x => {\n        return (\n          x.hasKitchen != \"Nein\" && x.lat != x.firstname && x.lon != x.firstname\n        );\n      });\n    },\n    selectedKitchens: function() {\n      return this.csv.filter(x => {\n        return x.kitchenUsed == \"Ja\";\n      });\n    },\n    noKitchenToSelect: function() {\n      return this.csv.length / 2 - this.selectedKitchens.length;\n    }\n  },\n  data: function() {\n    return {\n      maxDist: 2,\n      cityCenter: [49.872517, 8.651333],\n      currentZoom: 13,\n      kitchen_yes_used_icon: require(\"../assets/kitchen_yes_used_icon.png\"),\n      kitchen_yes_unused_icon: require(\"../assets/kitchen_yes_unused_icon.png\"),\n      kitchen_maybe_used_icon: require(\"../assets/kitchen_maybe_used_icon.png\"),\n      kitchen_maybe_unused_icon: require(\"../assets/kitchen_maybe_unused_icon.png\"),\n      mapFields: [\"firstname\", \"lastname\", \"organization\", \"kitchenUsed\"],\n      csv: [],\n      küchenMap: {\n        Ja: -1,\n        Nein: 1,\n        \"Wenn es nicht anders geht\": 0\n      },\n      personToChangeFrom: 0,\n      teamIdToChangeFrom: 0,\n      changedPerson: 0,\n      changedTo: 0,\n      hasTeamIds: false\n    };\n  },\n  methods: {\n    updateOtherTeamMember() {\n      // change the person that is affected by the change\n      for (let i = 0; i < this.csv.length; i++) {\n        if (\n          this.csv[i].teamId == this.personToChangeFrom.teamId &&\n          this.csv[i].firstname == this.personToChangeFrom.firstname\n        ) {\n          console.log(\"changing\", this.csv[i].firstname); //eslint-disable-line\n          this.csv[i].teamId = parseInt(this.teamIdToChange);\n          this.personToChangeFrom = 0;\n          this.teamIdToChange = 0;\n          break;\n        }\n      }\n\n      // double-check the change of the person that was changed\n      for (let i = 0; i < this.csv.length; i++) {\n        if (\n          this.csv[i].lastname == this.changedPerson.lastname &&\n          this.csv[i].firstname == this.changedPerson.firstname\n        ) {\n          console.log(\"double-check the change of\", this.csv[i].firstname); //eslint-disable-line\n          this.csv[i].teamId = parseInt(this.changedTo);\n          this.changedPerson = 0;\n          this.changedTo = 0;\n          break;\n        }\n      }\n      this.$store.commit(\"setCsv\", this.csv);\n    },\n    updateTeamId(e) {\n      let foundPerson = false;\n      this.changedPerson = e.row; // save the person that was changed\n      for (let i = 0; i < this.csv.length; i++) {\n        // find the other person with the teamId that has to be changed\n        if (\n          this.csv[i].teamId == parseInt(e.newVal) &&\n          (this.csv[i].firstname != e.row.firstname ||\n            this.csv[i].lastname != e.row.lastname) &&\n          this.csv[i].kitchenUsed == e.row.kitchenUsed\n        ) {\n          foundPerson = true;\n          this.changedTo = e.newVal;\n          this.personToChangeFrom = this.csv[i];\n          break;\n        }\n      }\n      if (!foundPerson) {\n        // We found the original teamId value before it was changed - save it\n        this.teamIdToChange = e.oldVal;\n      }\n      this.updateOtherTeamMember();\n      return;\n    },\n    getTeamPartner(teamId, kitchenUsed) {\n      for (let i = 0; i < this.csv.length; i++) {\n        if (\n          this.csv[i].teamId == teamId &&\n          this.csv[i].kitchenUsed != kitchenUsed\n        ) {\n          return this.csv[i];\n        }\n      }\n      return \"noone\";\n    },\n    toggleKitchen(kitchen) {\n      if (this.hasTeamIds){\n        return;\n      }\n      if (kitchen.kitchenUsed == \"Ja\") {\n        kitchen.kitchenUsed = \"Nein\";\n      } else {\n        kitchen.kitchenUsed = \"Ja\";\n      }\n    },\n    getIconFor(kitchen) {\n      if (kitchen.kitchenUsed == \"Ja\") {\n        return kitchen.hasKitchen == \"Ja\"\n          ? this.kitchen_yes_used_icon\n          : this.kitchen_maybe_used_icon;\n      } else {\n        return kitchen.hasKitchen == \"Ja\"\n          ? this.kitchen_yes_unused_icon\n          : this.kitchen_maybe_unused_icon;\n      }\n    },\n    preselectKitches() {\n      this.csv.forEach(x => {\n        if (\n          x.hasKitchen == \"Ja\" &&\n          this.distance(x.lat, x.lon, this.cityCenter[0], this.cityCenter[1]) <\n            this.maxDist\n        ) {\n          x.kitchenUsed = \"Ja\";\n        } else {\n          x.kitchenUsed = \"Nein\";\n        }\n      });\n    },\n    peopleWithUsedUnusedKitches(used) {\n      return this.csv.filter(x => {\n        return x.kitchenUsed == used;\n      });\n    },\n    createTeamIds() {\n      let peopleWithKitchens = this.peopleWithUsedUnusedKitches(\"Ja\");\n      let peopleWithoutKitchens = this.peopleWithUsedUnusedKitches(\"Nein\");\n      let currentTeamId = 1;\n      peopleWithKitchens.forEach(x => {\n        x.teamId = currentTeamId;\n        currentTeamId += 1;\n      });\n      currentTeamId = 1;\n      peopleWithoutKitchens.forEach(x => {\n        x.teamId = currentTeamId;\n        currentTeamId += 1;\n      });\n      this.hasTeamIds = true;\n      this.mapFields.push(\"teamId\");\n      this.$store.commit(\"setCsv\", this.csv);\n    }\n  },\n  mounted: function() {\n    if (this.$store.state.csv) {\n      this.csv = this.$store.state.csv;\n      this.hasTeamIds = this.$store.state.hasTeamIds;\n      if (this.hasTeamIds) {\n        this.mapFields.push(\"teamId\");\n      }\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n"]}]}