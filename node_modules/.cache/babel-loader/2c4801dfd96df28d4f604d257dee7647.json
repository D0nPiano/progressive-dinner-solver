{"remainingRequest":"/home/donpiano/running-dinner-solver/node_modules/babel-loader/lib/index.js!/home/donpiano/running-dinner-solver/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/donpiano/running-dinner-solver/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/donpiano/running-dinner-solver/src/components/Assignments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donpiano/running-dinner-solver/src/components/Assignments.vue","mtime":1575236572509},{"path":"/home/donpiano/running-dinner-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Assignments.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"page\">\n    <h1>Assignments</h1>\n    <p class=\"alert alert-success\" v-if=\"hasAssignments\">\n      Thats already sufficient! You are now able to <a href=\"#\" @click=\"$store.commit('setCurrentPage', 'emails')\">create & download the data for your E-Mails!</a>\n    </p>\n    <p\n      class=\"alert alert-info\"\n    >Here, all teams are assigned routes, telling them where they will have the first, second and third course.</p>\n\n    <button\n      type=\"button\"\n      class=\"btn btn-primary\"\n      @click=\"createRandomAssignment\"\n    >Create Team Assignments Randomly</button>\n    <button\n      type=\"button\"\n      class=\"btn btn-primary\"\n      @click=\"createFirstCourseOutsideAssignment\"\n    >Change to FirstCourse Away from city Center</button>\n    <button\n      type=\"button\"\n      class=\"btn btn-primary\"\n      @click=\"getBestConfig\"\n    >Get best Config in 20 Trials</button>\n    <div style=\"margin: 1em\">\n      <span\n        v-for=\"team in teams\"\n        @click=\"toggleSelectedTeam(team.teamId)\"\n        :key=\"team.teamId\"\n        :style=\"{'background-color': getTeamColor(team.teamId, selectedTeamNo)}\"\n        style=\"cursor: pointer\"\n        class=\"badge badge-secondary\"\n      >{{team.firstname}} and {{team.partner.firstname}} ({{team.sequence.distance.toFixed(2)}} km)</span>\n    </div>\n    <div\n      v-if=\"teams\"\n    >Overall Distance: {{overallDistance.toFixed(2)}} km | maxDistance: {{maxDistance.toFixed(2)}} km</div>\n    <p class=\"alert alert-warning\" v-if=\"!validConfig[0]\">Error: {{validConfig[1]}}</p>\n    <l-map\n      v-if=\"csv.length > -2\"\n      style=\"height: 50em; width: 100%\"\n      :center=\"[49.872517,8.651333]\"\n      :zoom=\"currentZoom\"\n    >\n      <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" layer-type=\"base\" />\n      <l-marker\n        v-for=\"kitchen in usedKitchens\"\n        v-bind:key=\"kitchen.teamId\"\n        :lat-lng=\"[kitchen.lat, kitchen.lon]\"\n        :title=\"kitchen.Vorname\"\n      >\n        <l-tooltip :content=\"kitchen.Vorname\"></l-tooltip>\n      </l-marker>\n      <l-polyline\n        v-for=\"team in teams\"\n        @mouseup=\"toggleSelectedTeam(team.teamId)\"\n        :key=\"team.teamId\"\n        :lat-lngs=\"team.sequence.latlngs\"\n        :color=\"getTeamColor(team.teamId, selectedTeamNo)\"\n      ></l-polyline>\n    </l-map>\n  </div>\n</template>\n\n<script>\nimport { LMap, LTileLayer, LMarker, LTooltip, LPolyline } from \"vue2-leaflet\";\nimport { globalFunctions } from \"./mixins/globalFunctions\";\nimport { assignmentInitializer } from \"./mixins/assignmentInitializer\";\nimport { assignmentOptimizers } from \"./mixins/assignmentOptimizers\";\nimport { assignmentStats } from \"./mixins/assignmentStats\";\n\nexport default {\n  name: \"Assignments\",\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LTooltip,\n    LPolyline\n  },\n  mixins: [\n    assignmentInitializer,\n    globalFunctions,\n    assignmentOptimizers,\n    assignmentStats\n  ],\n  computed: {\n    usedKitchens: function() {\n      return this.csv.filter(x => {\n        return x.kücheBenutzt == \"true\" || x.kücheBenutzt == \"Ja\";\n      });\n    }\n  },\n  methods: {\n    toggleSelectedTeam(teamId) {\n      this.selectedTeamNo = this.selectedTeamNo == teamId ? 0 : teamId;\n    },\n    getBestConfig() {\n      // trial and error version to find best assignment\n      let tried_assignments = []; // [assignmentIds, totalDist, maxDist], sorted by maxDist\n\n      // try 10 configurations\n      for (let i = 0; i < 20; i++) {\n        // start random with teams of first and last course randomly by distance\n        let assignments = this.getRandomAssignmentIds();\n        assignments = this.getFirstCourseOutsideAssignmentIds(assignments);\n        let teamArray = this.assignIdsToTeam(this.csv, assignments, this.assignmentMatrix);\n        let teamObject = this.createEnhancedTeamInfo(teamArray);\n        let stats = this.getStatsForAssignments(teamObject);\n        //console.log('current score:', assignments, stats.overallScore); //eslint-disable-line\n\n        assignments = this.getBetterAssignments(assignments, stats.overallScore);\n        teamArray = this.assignIdsToTeam(this.csv, assignments, this.assignmentMatrix);\n        teamObject = this.createEnhancedTeamInfo(teamArray);\n        stats = this.getStatsForAssignments(teamObject);\n        //console.log('current better score:', assignments, stats.overallScore); //eslint-disable-line\n\n        // get stats for assignment\n        // console.log('tried', assignments, stats.overallScore) //eslint-disable-line\n        tried_assignments.push([Array.from(assignments), stats.overallScore]);\n      }\n      let sortedAssignments = tried_assignments.sort((a, b) => {\n        return a[1] - b[1];\n      });\n      //console.log('BestConfigs:', sortedAssignments); //eslint-disable-line\n      console.log('BestConfig:', sortedAssignments[0][0], 'with', sortedAssignments[0][1]); //eslint-disable-line\n      let teamArray = this.assignIdsToTeam(this.csv, sortedAssignments[0][0], this.assignmentMatrix);\n      let teamObject = this.createEnhancedTeamInfo(teamArray);\n      let stats = this.getStatsForAssignments(teamObject);\n      console.log('BestConfigScore:', stats.overallScore); //eslint-disable-line\n      this.applyAssignments(sortedAssignments[0][0]);\n    },\n    getBetterAssignments(assignments, currentScore) {\n      // loop through all possibilities\n      let bestAssignment = JSON.stringify(assignments)\n      let newAssignments = []\n      let teamArray = []\n      let teamObject = null\n      let stats = []\n      for (let i = 1; i <= assignments.length; i++) {\n        for (let j = i; j <= assignments.length; j++) {\n          newAssignments = this.switchTeams(i, j, JSON.parse(bestAssignment))\n          \n          teamArray = this.assignIdsToTeam(this.csv, newAssignments, this.assignmentMatrix);\n          teamObject = this.createEnhancedTeamInfo(teamArray);\n          \n          stats = this.getStatsForAssignments(teamObject);\n          \n          if(stats.overallScore < currentScore){\n            bestAssignment = JSON.stringify(newAssignments)\n            currentScore = stats.overallScore\n          }\n        }\n      }\n      bestAssignment = JSON.parse(bestAssignment)\n      //console.log('better assignments', bestAssignment, currentScore); //eslint-disable-line\n      return bestAssignment;\n    },\n    createRandomAssignment() {\n      const assignments = this.getRandomAssignmentIds();\n      this.applyAssignments(assignments);\n    },\n    createFirstCourseOutsideAssignment() {\n      let assignments = this.getRandomAssignmentIds();\n      assignments = this.getFirstCourseOutsideAssignmentIds(assignments);\n      this.applyAssignments(assignments);\n    },\n    applyAssignments(assignments) {\n      this.teamToAssignIdMap = assignments;\n      const teamArray = this.assignIdsToTeam(this.csv, assignments, this.assignmentMatrix);\n      this.teams = this.createEnhancedTeamInfo(teamArray);\n      const stats = this.getStatsForAssignments(this.teams);\n      this.maxDistance = stats.maxDist;\n      this.overallDistance = stats.overallDist;\n      this.$store.commit(\"setCsv\", teamArray);\n    }\n  },\n  data: function() {\n    return {\n      header: \"Teams\",\n      currentZoom: 13,\n      teams: {},\n      csv: [],\n      polylines: [],\n      hasAssignments: false,\n      selectedTeamNo: 0,\n      cityCenter: [49.872517, 8.651333],\n      teamToAssignIdMap: [],\n      assignmentMatrix: [],\n      overallDistance: 0,\n      maxDistance: 0,\n      validConfig: [true]\n    };\n  },\n  mounted: function() {\n    if (this.$store.state.csv) {\n      this.csv = this.$store.state.csv;\n\n      // create Assignment Matrix\n      this.assignmentMatrix =  JSON.stringify(this.createAssignmentMatrix(this.csv.length / 2))\n\n      // check if assignments are already created\n      let hasAssignments = true;\n      this.csv.forEach(e => {\n        if (\n          e.firstCourse == e.firstname ||\n          e.secondCourse == e.firstname ||\n          e.thirdCourse == e.firstname\n        ) {\n          hasAssignments = false;\n        }\n      });\n      if (hasAssignments) {\n        this.hasAssignments = hasAssignments;\n        this.teams = this.createEnhancedTeamInfo(this.csv);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.badge {\n  margin: 2px;\n  font-size: 1em;\n}\n</style>\n"],"sourceRoot":"src/components"}]}