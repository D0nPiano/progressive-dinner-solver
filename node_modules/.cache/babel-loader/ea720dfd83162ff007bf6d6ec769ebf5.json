{"remainingRequest":"/home/donpiano/running-dinner-solver/node_modules/babel-loader/lib/index.js!/home/donpiano/running-dinner-solver/node_modules/eslint-loader/index.js??ref--13-0!/home/donpiano/running-dinner-solver/src/components/mixins/assignmentInitializer.js","dependencies":[{"path":"/home/donpiano/running-dinner-solver/src/components/mixins/assignmentInitializer.js","mtime":1575120126024},{"path":"/home/donpiano/running-dinner-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/donpiano/running-dinner-solver/src/components/mixins/assignmentInitializer.js"],"names":["globalFunctions","assignmentInitializer","mixins","methods","switchTeams","teamIdOne","teamIdTwo","assignments","newMap","i","length","getPolylineForTeam","teamId","teams","e","firstCourseCook","firstCourse","secondCourseCook","secondCourse","thirdCourseCook","thirdCourse","firstDist","distance","lat","lon","secondDist","latlngs","getFirstCourseOutsideAssignmentIds","numOfTeams","csv","numOfKitchensAtOnce","teamDistanceMap","distToCityCenter","cityCenter","push","sort","x","y","map","slice","shuffle","createEnhancedTeamInfo","teamArray","forEach","kitchenUsed","partner","prop","sequence","replaceTeamIdsWithAssignmentIds","assignmentMatrix","allMeals","JSON","parse","course","kitchen","person","assignIdsToTeam","assignmentArray","kitchenTeams","includes","getRandomAssignmentIds","createAssignmentMatrix"],"mappings":"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","sourcesContent":["\nimport { globalFunctions } from \"./globalFunctions\";\n\nexport const assignmentInitializer = {\n  mixins: [globalFunctions],\n  methods: {\n    switchTeams(teamIdOne, teamIdTwo, assignments) {\n      let newMap = assignments;\n      for (let i = 0; i < newMap.length; i++) {\n        if (newMap[i] == teamIdTwo) {\n          newMap[i] = teamIdOne;\n        } else if (newMap[i] == teamIdOne) {\n          newMap[i] = teamIdTwo;\n        }\n      }\n      return newMap;\n    },/*\n    switchMainCourse(teamIdOne, teamIdTwo) {\n      let newMap = this.teamToAssignIdMap;\n      for (let i = 0; i < newMap.length; i++) {\n        if (newMap[i] == teamIdTwo) {\n          newMap[i] = teamIdOne;\n        } else if (newMap[i] == teamIdOne) {\n          newMap[i] = teamIdTwo;\n        }\n      }\n      return newMap;\n    },*/\n    getPolylineForTeam(teamId, teams) {\n      let e = teams[teamId];\n      const firstCourseCook = teams[e.firstCourse];\n      const secondCourseCook = teams[e.secondCourse];\n      const thirdCourseCook = teams[e.thirdCourse];\n      // console.log(firstCourseCook.firstname, ' -> ', secondCourseCook.firstname, ' -> ', thirdCourseCook.firstname) //eslint-disable-line\n\n      const firstDist = this.distance(\n        firstCourseCook.lat,\n        firstCourseCook.lon,\n        secondCourseCook.lat,\n        secondCourseCook.lon\n      )\n      const secondDist = this.distance(\n        secondCourseCook.lat,\n        secondCourseCook.lon,\n        thirdCourseCook.lat,\n        thirdCourseCook.lon\n      )\n\n      return {\n        firstDist: firstDist,\n        secondDist: secondDist,\n        distance: firstDist + secondDist,\n        latlngs: [\n          [firstCourseCook.lat, firstCourseCook.lon],\n          [secondCourseCook.lat, secondCourseCook.lon],\n          [thirdCourseCook.lat, thirdCourseCook.lon]\n        ]\n      };\n    },\n    getFirstCourseOutsideAssignmentIds(assignments){\n      // the first course should be as far away from the city center as possible\n      let numOfTeams = this.csv.length / 2;\n      let numOfKitchensAtOnce = numOfTeams / 3;\n  \n      // find the best places for the first course\n      let teamDistanceMap = []\n      for (let i = 1; i <= numOfTeams; i++) {\n        const distToCityCenter = this.distance(this.teams[i].lat, this.teams[i].lon, this.cityCenter[0], this.cityCenter[1])\n        teamDistanceMap.push([this.teams[i].teamId, distToCityCenter]);\n      }\n      teamDistanceMap = teamDistanceMap.sort((x, y) => {return y[1] - x[1]})\n      teamDistanceMap = teamDistanceMap.map((x) => (x[0]))\n  \n      let firstCourse = teamDistanceMap.slice(0, numOfKitchensAtOnce)\n      let thirdCourse = teamDistanceMap.slice(numOfKitchensAtOnce*2, numOfKitchensAtOnce*3)\n      firstCourse = this.shuffle(firstCourse)\n      thirdCourse = this.shuffle(thirdCourse)\n      \n      // set first course as far outside as possible\n      for (let i = 0; i < numOfKitchensAtOnce; i++) {\n        assignments = this.switchTeams(assignments[i], firstCourse[i], assignments)\n      }\n  \n      // set last course as near at the center as possible\n      for (let i = 0; i < numOfKitchensAtOnce; i++) {\n        assignments = this.switchTeams(assignments[i + numOfKitchensAtOnce * 2], thirdCourse[i], assignments)\n      }\n      return assignments\n    },\n    createEnhancedTeamInfo(teamArray) {\n      let teams = {};\n  \n      // generate object from array\n      teamArray.forEach(e => {\n        if (e.kitchenUsed == \"Ja\") {\n          teams[e.teamId] = e;\n        }\n      });\n  \n      // add partner info\n      teamArray.forEach(e => {\n        if (e.kitchenUsed != \"Ja\") {\n          teams[e.teamId].partner = e;\n        }\n      });\n  \n      // add distance info & add polyline to map\n      for (var prop in teams) {\n        teams[prop].sequence = this.getPolylineForTeam(prop, teams);\n      }\n      return teams;\n    },\n    replaceTeamIdsWithAssignmentIds(assignments, assignmentMatrix) {\n      let allMeals = JSON.parse(assignmentMatrix)\n      //assignmentMatrix[0] = 1\n      //let allMeals = this.createAssignmentMatrix(21)\n  \n      // replace teamIds according to map\n      for (let course = 0; course < allMeals.length; course++) {\n        for (let kitchen = 0; kitchen < allMeals[course].length; kitchen++) {\n          for (\n            let person = 0;\n            person < allMeals[course][kitchen].length;\n            person++\n          ) {\n            allMeals[course][kitchen][person] = assignments[\n              allMeals[course][kitchen][person] - 1\n            ];\n          }\n        }\n      }\n      return allMeals;\n    },\n    assignIdsToTeam(teamArray, assignments, assignmentMatrix) { // updates the csv data\n      let assignmentArray = this.replaceTeamIdsWithAssignmentIds(assignments, assignmentMatrix);\n      teamArray.forEach(e => {\n        assignmentArray[0].forEach(kitchenTeams => {\n          if (kitchenTeams.includes(e.teamId)) {\n            e.firstCourse = kitchenTeams[0];\n            // console.log(e.teamId, \" eats at \", kitchenTeams[0], \" with teams \", kitchenTeams) //eslint-disable-line\n          }\n        });\n  \n        assignmentArray[1].forEach(kitchenTeams => {\n          if (kitchenTeams.includes(e.teamId)) {\n            e.secondCourse = kitchenTeams[1];\n            // console.log(e.teamId, \" eats at \", kitchenTeams[0], \" with teams \", kitchenTeams) //eslint-disable-line\n          }\n        });\n  \n        assignmentArray[2].forEach(kitchenTeams => {\n          if (kitchenTeams.includes(e.teamId)) {\n            e.thirdCourse = kitchenTeams[2];\n            // console.log(e.teamId, \" eats at \", kitchenTeams[0], \" with teams \", kitchenTeams) //eslint-disable-line\n          }\n        });\n      });\n      return teamArray;\n    },\n    getRandomAssignmentIds(){\n      // shuffle team ids\n      let numOfTeams = this.csv.length / 2;\n  \n      let teams = [];\n      for (let i = 1; i <= numOfTeams; i++) {\n        teams.push(i);\n      }\n      return this.shuffle(teams);\n    },\n    /**\n     * Returns an assignment matrix of type\n     * [[[147], [258], [369]],\n     *  [[168], [249], [357]],\n     *  [[159], [267], [349]]\n     * ]\n     * @param {Number} numOfTeams the total number of participation teams\n     */\n    createAssignmentMatrix(numOfTeams) {\n      let numOfKitchensAtOnce = numOfTeams / 3;\n\n      // firstCourse\n      let firstCourse = []; // will be of type [[[147], [258], [369]]]]\n      for (let i = 1; i <= numOfTeams; i++) {\n        if (firstCourse[i % numOfKitchensAtOnce]) {\n          firstCourse[i % numOfKitchensAtOnce].push(i);\n        } else {\n          firstCourse[i % numOfKitchensAtOnce] = [i];\n        }\n      }\n\n      // secondCourse\n      let secondCourse = []; // will be of type [[[168], [249], [357]]]]\n      for (let i = 1; i <= numOfTeams / 3; i++) {\n        secondCourse[i % numOfKitchensAtOnce] = [i];\n      }\n      for (let i = numOfTeams / 3 + 1; i <= (numOfTeams / 3) * 2; i++) {\n        secondCourse[(i + 1) % numOfKitchensAtOnce].push(i);\n      }\n      for (let i = (numOfTeams / 3) * 2 + 1; i <= numOfTeams; i++) {\n        secondCourse[(i + 2) % numOfKitchensAtOnce].push(i);\n      }\n\n      // thirdCourse\n      let thirdCourse = []; // will be of type [[[[159], [267], [349]]]\n      for (let i = 1; i <= numOfTeams / 3; i++) {\n        thirdCourse[i % numOfKitchensAtOnce] = [i];\n      }\n      for (let i = numOfTeams / 3 + 1; i <= (numOfTeams / 3) * 2; i++) {\n        thirdCourse[(i + 2) % numOfKitchensAtOnce].push(i);\n      }\n      for (let i = (numOfTeams / 3) * 2 + 1; i <= numOfTeams; i++) {\n        thirdCourse[(i + 4) % numOfKitchensAtOnce].push(i);\n      }\n\n      return [firstCourse, secondCourse, thirdCourse];\n    }\n  },\n}"]}]}