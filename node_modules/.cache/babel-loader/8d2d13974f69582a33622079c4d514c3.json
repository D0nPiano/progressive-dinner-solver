{"remainingRequest":"/home/donpiano/running-dinner-solver/node_modules/babel-loader/lib/index.js!/home/donpiano/running-dinner-solver/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/donpiano/running-dinner-solver/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/donpiano/running-dinner-solver/src/components/Teams.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donpiano/running-dinner-solver/src/components/Teams.vue","mtime":1575236361059},{"path":"/home/donpiano/running-dinner-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Teams.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA,SAAA,IAAA,EAAA,UAAA,EAAA,OAAA,EAAA,QAAA,EAAA,KAAA,QAAA,cAAA;AACA,SAAA,eAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,IADA;AAEA,IAAA,UAAA,EAAA,UAFA;AAGA,IAAA,OAAA,EAAA,OAHA;AAIA,IAAA,QAAA,EAAA,QAJA;AAKA,IAAA,KAAA,EAAA;AALA,GAFA;AASA,EAAA,MAAA,EAAA,CAAA,eAAA,CATA;AAUA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA,aAAA,KAAA,GAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA;AACA,eACA,CAAA,CAAA,UAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA,SAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA,SADA;AAGA,OAJA,CAAA;AAKA,KAPA;AAQA,IAAA,gBAAA,EAAA,4BAAA;AACA,aAAA,KAAA,GAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,WAAA,IAAA,IAAA;AACA,OAFA,CAAA;AAGA,KAZA;AAaA,IAAA,iBAAA,EAAA,6BAAA;AACA,aAAA,KAAA,GAAA,CAAA,MAAA,GAAA,CAAA,GAAA,KAAA,gBAAA,CAAA,MAAA;AACA;AAfA,GAVA;AA2BA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,CADA;AAEA,MAAA,UAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAFA;AAGA,MAAA,WAAA,EAAA,EAHA;AAIA,MAAA,qBAAA,EAAA,OAAA,uCAJA;AAKA,MAAA,uBAAA,EAAA,OAAA,yCALA;AAMA,MAAA,uBAAA,EAAA,OAAA,yCANA;AAOA,MAAA,yBAAA,EAAA,OAAA,2CAPA;AAQA,MAAA,SAAA,EAAA,CAAA,WAAA,EAAA,UAAA,EAAA,cAAA,EAAA,aAAA,CARA;AASA,MAAA,GAAA,EAAA,EATA;AAUA,MAAA,SAAA,EAAA;AACA,QAAA,EAAA,EAAA,CAAA,CADA;AAEA,QAAA,IAAA,EAAA,CAFA;AAGA,qCAAA;AAHA,OAVA;AAeA,MAAA,kBAAA,EAAA,CAfA;AAgBA,MAAA,kBAAA,EAAA,CAhBA;AAiBA,MAAA,aAAA,EAAA,CAjBA;AAkBA,MAAA,SAAA,EAAA,CAlBA;AAmBA,MAAA,UAAA,EAAA;AAnBA,KAAA;AAqBA,GAjDA;AAkDA,EAAA,OAAA,EAAA;AACA,IAAA,qBADA,mCACA;AACA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,GAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YACA,KAAA,GAAA,CAAA,CAAA,EAAA,MAAA,IAAA,KAAA,kBAAA,CAAA,MAAA,IACA,KAAA,GAAA,CAAA,CAAA,EAAA,SAAA,IAAA,KAAA,kBAAA,CAAA,SAFA,EAGA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,KAAA,GAAA,CAAA,CAAA,EAAA,SAAA,EADA,CACA;;AACA,eAAA,GAAA,CAAA,CAAA,EAAA,MAAA,GAAA,QAAA,CAAA,KAAA,cAAA,CAAA;AACA,eAAA,kBAAA,GAAA,CAAA;AACA,eAAA,cAAA,GAAA,CAAA;AACA;AACA;AACA,OAbA,CAeA;;;AACA,WAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAA,GAAA,CAAA,MAAA,EAAA,EAAA,EAAA,EAAA;AACA,YACA,KAAA,GAAA,CAAA,EAAA,EAAA,QAAA,IAAA,KAAA,aAAA,CAAA,QAAA,IACA,KAAA,GAAA,CAAA,EAAA,EAAA,SAAA,IAAA,KAAA,aAAA,CAAA,SAFA,EAGA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,4BAAA,EAAA,KAAA,GAAA,CAAA,EAAA,EAAA,SAAA,EADA,CACA;;AACA,eAAA,GAAA,CAAA,EAAA,EAAA,MAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA;AACA,eAAA,aAAA,GAAA,CAAA;AACA,eAAA,SAAA,GAAA,CAAA;AACA;AACA;AACA;;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,QAAA,EAAA,KAAA,GAAA;AACA,KA9BA;AA+BA,IAAA,YA/BA,wBA+BA,CA/BA,EA+BA;AACA,UAAA,WAAA,GAAA,KAAA;AACA,WAAA,aAAA,GAAA,CAAA,CAAA,GAAA,CAFA,CAEA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,GAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA;AACA,YACA,KAAA,GAAA,CAAA,CAAA,EAAA,MAAA,IAAA,QAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KACA,KAAA,GAAA,CAAA,CAAA,EAAA,SAAA,IAAA,CAAA,CAAA,GAAA,CAAA,SAAA,IACA,KAAA,GAAA,CAAA,CAAA,EAAA,QAAA,IAAA,CAAA,CAAA,GAAA,CAAA,QAFA,KAGA,KAAA,GAAA,CAAA,CAAA,EAAA,WAAA,IAAA,CAAA,CAAA,GAAA,CAAA,WAJA,EAKA;AACA,UAAA,WAAA,GAAA,IAAA;AACA,eAAA,SAAA,GAAA,CAAA,CAAA,MAAA;AACA,eAAA,kBAAA,GAAA,KAAA,GAAA,CAAA,CAAA,CAAA;AACA;AACA;AACA;;AACA,UAAA,CAAA,WAAA,EAAA;AACA;AACA,aAAA,cAAA,GAAA,CAAA,CAAA,MAAA;AACA;;AACA,WAAA,qBAAA;AACA;AACA,KAtDA;AAuDA,IAAA,cAvDA,0BAuDA,MAvDA,EAuDA,WAvDA,EAuDA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,GAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YACA,KAAA,GAAA,CAAA,CAAA,EAAA,MAAA,IAAA,MAAA,IACA,KAAA,GAAA,CAAA,CAAA,EAAA,WAAA,IAAA,WAFA,EAGA;AACA,iBAAA,KAAA,GAAA,CAAA,CAAA,CAAA;AACA;AACA;;AACA,aAAA,OAAA;AACA,KAjEA;AAkEA,IAAA,aAlEA,yBAkEA,OAlEA,EAkEA;AACA,UAAA,KAAA,UAAA,EAAA;AACA;AACA;;AACA,UAAA,OAAA,CAAA,WAAA,IAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,WAAA,GAAA,MAAA;AACA,OAFA,MAEA;AACA,QAAA,OAAA,CAAA,WAAA,GAAA,IAAA;AACA;AACA,KA3EA;AA4EA,IAAA,UA5EA,sBA4EA,OA5EA,EA4EA;AACA,UAAA,OAAA,CAAA,WAAA,IAAA,IAAA,EAAA;AACA,eAAA,OAAA,CAAA,UAAA,IAAA,IAAA,GACA,KAAA,qBADA,GAEA,KAAA,uBAFA;AAGA,OAJA,MAIA;AACA,eAAA,OAAA,CAAA,UAAA,IAAA,IAAA,GACA,KAAA,uBADA,GAEA,KAAA,yBAFA;AAGA;AACA,KAtFA;AAuFA,IAAA,gBAvFA,8BAuFA;AAAA;;AACA,WAAA,GAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YACA,CAAA,CAAA,UAAA,IAAA,IAAA,IACA,KAAA,CAAA,QAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,EAAA,KAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,UAAA,CAAA,CAAA,CAAA,IACA,KAAA,CAAA,OAHA,EAIA;AACA,UAAA,CAAA,CAAA,WAAA,GAAA,IAAA;AACA,SANA,MAMA;AACA,UAAA,CAAA,CAAA,WAAA,GAAA,MAAA;AACA;AACA,OAVA;AAWA,KAnGA;AAoGA,IAAA,2BApGA,uCAoGA,IApGA,EAoGA;AACA,aAAA,KAAA,GAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,WAAA,IAAA,IAAA;AACA,OAFA,CAAA;AAGA,KAxGA;AAyGA,IAAA,aAzGA,2BAyGA;AACA,UAAA,kBAAA,GAAA,KAAA,2BAAA,CAAA,IAAA,CAAA;AACA,UAAA,qBAAA,GAAA,KAAA,2BAAA,CAAA,MAAA,CAAA;AACA,UAAA,aAAA,GAAA,CAAA;AACA,MAAA,kBAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,QAAA,CAAA,CAAA,MAAA,GAAA,aAAA;AACA,QAAA,aAAA,IAAA,CAAA;AACA,OAHA;AAIA,MAAA,aAAA,GAAA,CAAA;AACA,MAAA,qBAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,QAAA,CAAA,CAAA,MAAA,GAAA,aAAA;AACA,QAAA,aAAA,IAAA,CAAA;AACA,OAHA;AAIA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,SAAA,CAAA,IAAA,CAAA,QAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,QAAA,EAAA,KAAA,GAAA;AACA;AAzHA,GAlDA;AA6KA,EAAA,OAAA,EAAA,mBAAA;AACA,QAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA,EAAA;AACA,WAAA,GAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA;AACA,WAAA,UAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA;;AACA,UAAA,KAAA,UAAA,EAAA;AACA,aAAA,SAAA,CAAA,IAAA,CAAA,QAAA;AACA;AACA;AACA;AArLA,CAAA","sourcesContent":["<template>\n  <div class=\"page\">\n    <h1>Select Kitchens & Create Teams</h1>\n    <p class=\"alert alert-success\" v-if=\"hasTeamIds\">\n      Great! Go on and <a href=\"#\" @click=\"$store.commit('setCurrentPage', 'assignments')\">create a route for your newly selected teams!</a>\n    </p>\n    <p v-if=\"csv.length < 2\" class=\"alert alert-info\">\n      Here, people are assigned to random teams according to their\n      <b>distance to the city center</b>, depending if they have a\n      <b>kitchen and space</b>, a\n      <b>maybe kitchen</b>, and on their\n      <b>organization.</b>\n    </p>\n    <div class=\"card\" style=\"max-width: 40em; margin: 0 auto;\" v-if=\"csv.length > 0 && !hasTeamIds\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">\n          <span\n            v-if=\"noKitchenToSelect != 0\"\n          >You still have to select {{ noKitchenToSelect }} kitchens.</span>\n          <span v-else-if=\"!hasTeamIds\">You are good to go. Create Teams now.</span>\n          <span v-else>You are good to go. Go on with the Assignments!</span>\n        </h5>\n        <p class=\"card-text\">\n          <span v-if=\"!hasTeamIds\">\n            <span v-if=\"noKitchenToSelect != 0\">\n              You can also select kitchens by\n              <b>clicking on them on the map</b>\n            </span>.\n            <br />Maximum Distance from Center:\n            <input\n              style=\"width: 60px\"\n              v-model.number=\"maxDist\"\n              type=\"number\"\n            />km\n            <br />\n          </span>\n          <button\n            @click=\"preselectKitches\"\n            type=\"button\"\n            class=\"btn btn-primary\"\n            v-if=\"!hasTeamIds\"\n          >Automatically pre-select kitchens in {{maxDist}} km radis</button>\n          <button\n            v-if=\"!hasTeamIds\"\n            :disabled=\"noKitchenToSelect != 0\"\n            @click=\"createTeamIds\"\n            type=\"button\"\n            class=\"btn btn-primary\"\n          >Create Team IDs</button>\n        </p>\n      </div>\n    </div>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <v-client-table\n            v-if=\"csv.length > 0\"\n            ref=\"table\"\n            @update=\"updateTeamId\"\n            :data=\"csv\"\n            :options=\"{editableColumns:['teamId']}\"\n            :columns=\"mapFields\"\n          >\n            <div \n              slot=\"teamId\"\n              slot-scope=\"{row, update}\"\n              :style=\"{'background-color': getTeamColor(row.teamId, 0), 'padding': '5px'}\">\n              <select\n              v-model=\"row.teamId\"\n              @input=\"update(row.teamId)\"\n              @change=\"update(row.teamId)\"\n            >\n              <option\n                v-for=\"n in (csv.length / 2)\"\n                :key=\"n\"\n                :value=\"n\"\n              >{{n}} with {{getTeamPartner(n, row.kitchenUsed).firstname}}</option>\n            </select>\n            </div>\n            \n          </v-client-table>\n        </div>\n        <div class=\"col-sm\">\n          <div v-if=\"csv.length > 0\" style=\"height: 100%; width: 100%; margin: auto;\">\n            <l-map\n              style=\"height: 100%; width: 100%;margin: 20px;\"\n              :center=\"[49.872517,8.651333]\"\n              :zoom=\"currentZoom\"\n            >\n              <l-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" layer-type=\"base\" />\n              <l-marker\n                v-for=\"kitchen in kitchens\"\n                v-bind:key=\"kitchen.TeamId\"\n                :lat-lng=\"[kitchen.lat, kitchen.lon]\"\n                :title=\"kitchen.firstname\"\n                @click=\"toggleKitchen(kitchen)\"\n              >\n                <l-icon\n                  :icon-size=\"[20, 30]\"\n                  :icon-anchor=\"[10, 15]\"\n                  :icon-url=\"getIconFor(kitchen)\"\n                />\n                <l-tooltip :content=\"kitchen.firstname + ' <br> ' + kitchen.message\"></l-tooltip>\n              </l-marker>\n            </l-map>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { LMap, LTileLayer, LMarker, LTooltip, LIcon } from \"vue2-leaflet\";\nimport { globalFunctions } from './mixins/globalFunctions';\n\nexport default {\n  name: \"Teams\",\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LTooltip,\n    LIcon\n  },\n  mixins: [globalFunctions],\n  computed: {\n    kitchens: function() {\n      return this.csv.filter(x => {\n        return (\n          x.hasKitchen != \"Nein\" && x.lat != x.firstname && x.lon != x.firstname\n        );\n      });\n    },\n    selectedKitchens: function() {\n      return this.csv.filter(x => {\n        return x.kitchenUsed == \"Ja\";\n      });\n    },\n    noKitchenToSelect: function() {\n      return this.csv.length / 2 - this.selectedKitchens.length;\n    }\n  },\n  data: function() {\n    return {\n      maxDist: 2,\n      cityCenter: [49.872517, 8.651333],\n      currentZoom: 13,\n      kitchen_yes_used_icon: require(\"../assets/kitchen_yes_used_icon.png\"),\n      kitchen_yes_unused_icon: require(\"../assets/kitchen_yes_unused_icon.png\"),\n      kitchen_maybe_used_icon: require(\"../assets/kitchen_maybe_used_icon.png\"),\n      kitchen_maybe_unused_icon: require(\"../assets/kitchen_maybe_unused_icon.png\"),\n      mapFields: [\"firstname\", \"lastname\", \"organization\", \"kitchenUsed\"],\n      csv: [],\n      küchenMap: {\n        Ja: -1,\n        Nein: 1,\n        \"Wenn es nicht anders geht\": 0\n      },\n      personToChangeFrom: 0,\n      teamIdToChangeFrom: 0,\n      changedPerson: 0,\n      changedTo: 0,\n      hasTeamIds: false\n    };\n  },\n  methods: {\n    updateOtherTeamMember() {\n      // change the person that is affected by the change\n      for (let i = 0; i < this.csv.length; i++) {\n        if (\n          this.csv[i].teamId == this.personToChangeFrom.teamId &&\n          this.csv[i].firstname == this.personToChangeFrom.firstname\n        ) {\n          console.log(\"changing\", this.csv[i].firstname); //eslint-disable-line\n          this.csv[i].teamId = parseInt(this.teamIdToChange);\n          this.personToChangeFrom = 0;\n          this.teamIdToChange = 0;\n          break;\n        }\n      }\n\n      // double-check the change of the person that was changed\n      for (let i = 0; i < this.csv.length; i++) {\n        if (\n          this.csv[i].lastname == this.changedPerson.lastname &&\n          this.csv[i].firstname == this.changedPerson.firstname\n        ) {\n          console.log(\"double-check the change of\", this.csv[i].firstname); //eslint-disable-line\n          this.csv[i].teamId = parseInt(this.changedTo);\n          this.changedPerson = 0;\n          this.changedTo = 0;\n          break;\n        }\n      }\n      this.$store.commit(\"setCsv\", this.csv);\n    },\n    updateTeamId(e) {\n      let foundPerson = false;\n      this.changedPerson = e.row; // save the person that was changed\n      for (let i = 0; i < this.csv.length; i++) {\n        // find the other person with the teamId that has to be changed\n        if (\n          this.csv[i].teamId == parseInt(e.newVal) &&\n          (this.csv[i].firstname != e.row.firstname ||\n            this.csv[i].lastname != e.row.lastname) &&\n          this.csv[i].kitchenUsed == e.row.kitchenUsed\n        ) {\n          foundPerson = true;\n          this.changedTo = e.newVal;\n          this.personToChangeFrom = this.csv[i];\n          break;\n        }\n      }\n      if (!foundPerson) {\n        // We found the original teamId value before it was changed - save it\n        this.teamIdToChange = e.oldVal;\n      }\n      this.updateOtherTeamMember();\n      return;\n    },\n    getTeamPartner(teamId, kitchenUsed) {\n      for (let i = 0; i < this.csv.length; i++) {\n        if (\n          this.csv[i].teamId == teamId &&\n          this.csv[i].kitchenUsed != kitchenUsed\n        ) {\n          return this.csv[i];\n        }\n      }\n      return \"noone\";\n    },\n    toggleKitchen(kitchen) {\n      if (this.hasTeamIds){\n        return;\n      }\n      if (kitchen.kitchenUsed == \"Ja\") {\n        kitchen.kitchenUsed = \"Nein\";\n      } else {\n        kitchen.kitchenUsed = \"Ja\";\n      }\n    },\n    getIconFor(kitchen) {\n      if (kitchen.kitchenUsed == \"Ja\") {\n        return kitchen.hasKitchen == \"Ja\"\n          ? this.kitchen_yes_used_icon\n          : this.kitchen_maybe_used_icon;\n      } else {\n        return kitchen.hasKitchen == \"Ja\"\n          ? this.kitchen_yes_unused_icon\n          : this.kitchen_maybe_unused_icon;\n      }\n    },\n    preselectKitches() {\n      this.csv.forEach(x => {\n        if (\n          x.hasKitchen == \"Ja\" &&\n          this.distance(x.lat, x.lon, this.cityCenter[0], this.cityCenter[1]) <\n            this.maxDist\n        ) {\n          x.kitchenUsed = \"Ja\";\n        } else {\n          x.kitchenUsed = \"Nein\";\n        }\n      });\n    },\n    peopleWithUsedUnusedKitches(used) {\n      return this.csv.filter(x => {\n        return x.kitchenUsed == used;\n      });\n    },\n    createTeamIds() {\n      let peopleWithKitchens = this.peopleWithUsedUnusedKitches(\"Ja\");\n      let peopleWithoutKitchens = this.peopleWithUsedUnusedKitches(\"Nein\");\n      let currentTeamId = 1;\n      peopleWithKitchens.forEach(x => {\n        x.teamId = currentTeamId;\n        currentTeamId += 1;\n      });\n      currentTeamId = 1;\n      peopleWithoutKitchens.forEach(x => {\n        x.teamId = currentTeamId;\n        currentTeamId += 1;\n      });\n      this.hasTeamIds = true;\n      this.mapFields.push(\"teamId\");\n      this.$store.commit(\"setCsv\", this.csv);\n    }\n  },\n  mounted: function() {\n    if (this.$store.state.csv) {\n      this.csv = this.$store.state.csv;\n      this.hasTeamIds = this.$store.state.hasTeamIds;\n      if (this.hasTeamIds) {\n        this.mapFields.push(\"teamId\");\n      }\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/components"}]}