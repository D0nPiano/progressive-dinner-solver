{"remainingRequest":"/home/donpiano/running-dinner-solver/node_modules/babel-loader/lib/index.js!/home/donpiano/running-dinner-solver/node_modules/eslint-loader/index.js??ref--13-0!/home/donpiano/running-dinner-solver/src/components/mixins/assignmentStats.js","dependencies":[{"path":"/home/donpiano/running-dinner-solver/src/components/mixins/assignmentStats.js","mtime":1575111100094},{"path":"/home/donpiano/running-dinner-solver/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donpiano/running-dinner-solver/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0IHsgZ2xvYmFsRnVuY3Rpb25zIH0gZnJvbSAiLi9nbG9iYWxGdW5jdGlvbnMiOwpleHBvcnQgdmFyIGFzc2lnbm1lbnRTdGF0cyA9IHsKICBtaXhpbnM6IFtnbG9iYWxGdW5jdGlvbnNdLAogIG1ldGhvZHM6IHsKICAgIGdldFN0YXRzRm9yQXNzaWdubWVudHM6IGZ1bmN0aW9uIGdldFN0YXRzRm9yQXNzaWdubWVudHModGVhbU9iamVjdCkgewogICAgICAvLyBPdmVyYWxsIERpc3RhbmNlCiAgICAgIHZhciBvdmVyYWxsRGlzdCA9IHRoaXMuZ2V0T3ZlcmFsbERpc3QodGVhbU9iamVjdCk7IC8vIE1heGltdW0gRGlzdGFuY2UKCiAgICAgIHZhciBtYXhEaXN0ID0gdGhpcy5nZXRNYXhEaXN0KHRlYW1PYmplY3QpOyAvLyBUb3RhbCBEaXN0YW5jZSBmcm9tIGxhc3QgY291cnNlIHRvIEFmdGVycGFyeQogICAgICAvLyBNYXhpbXVtIERpc3RhbmNlIHBlciB3YXkKICAgICAgLy8gaXMgdmFsaWQgY29uZmlnCgogICAgICB2YXIgaXNWYWxpZCA9IHRoaXMuaXNWYWxpZENvbmZpZyh0ZWFtT2JqZWN0KTsKCiAgICAgIGlmICghaXNWYWxpZFswXSkgewogICAgICAgIGNvbnNvbGUubG9nKGlzVmFsaWQpOyAvL2VzbGludC1kaXNhYmxlLWxpbmUKICAgICAgfSAvL2NvbnN0IG92ZXJhbGxTY29yZSA9IG92ZXJhbGxEaXN0ICsgbWF4RGlzdDsKCgogICAgICB2YXIgb3ZlcmFsbFNjb3JlID0gdGhpcy5nZXRTcXVhcmVEaXN0YW5jZXModGVhbU9iamVjdCk7CiAgICAgIHJldHVybiB7CiAgICAgICAgJ292ZXJhbGxEaXN0Jzogb3ZlcmFsbERpc3QsCiAgICAgICAgJ21heERpc3QnOiBtYXhEaXN0LAogICAgICAgICdvdmVyYWxsU2NvcmUnOiBvdmVyYWxsU2NvcmUKICAgICAgfTsKICAgIH0sCiAgICBnZXRTcXVhcmVEaXN0YW5jZXM6IGZ1bmN0aW9uIGdldFNxdWFyZURpc3RhbmNlcyh0ZWFtT2JqZWN0KSB7CiAgICAgIHZhciBvdmVyYWxsRGlzdCA9IDA7CgogICAgICBmb3IgKHZhciB0ZWFtSWQgaW4gdGVhbU9iamVjdCkgewogICAgICAgIG92ZXJhbGxEaXN0ICs9IE1hdGgucG93KHRlYW1PYmplY3RbdGVhbUlkXS5zZXF1ZW5jZS5maXJzdERpc3QsIDIpOwogICAgICAgIG92ZXJhbGxEaXN0ICs9IE1hdGgucG93KHRlYW1PYmplY3RbdGVhbUlkXS5zZXF1ZW5jZS5zZWNvbmREaXN0LCAyKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG92ZXJhbGxEaXN0OwogICAgfSwKICAgIGdldE92ZXJhbGxEaXN0OiBmdW5jdGlvbiBnZXRPdmVyYWxsRGlzdCh0ZWFtT2JqZWN0KSB7CiAgICAgIHZhciBvdmVyYWxsRGlzdCA9IDA7CgogICAgICBmb3IgKHZhciB0ZWFtSWQgaW4gdGVhbU9iamVjdCkgewogICAgICAgIG92ZXJhbGxEaXN0ICs9IHRlYW1PYmplY3RbdGVhbUlkXS5zZXF1ZW5jZS5kaXN0YW5jZTsKICAgICAgfQoKICAgICAgcmV0dXJuIG92ZXJhbGxEaXN0OwogICAgfSwKICAgIGdldE1heERpc3Q6IGZ1bmN0aW9uIGdldE1heERpc3QodGVhbU9iamVjdCkgewogICAgICB2YXIgbWF4RGlzdCA9IDA7CgogICAgICBmb3IgKHZhciB0ZWFtSWQgaW4gdGVhbU9iamVjdCkgewogICAgICAgIHZhciBjdXJEaXN0ID0gdGVhbU9iamVjdFt0ZWFtSWRdLnNlcXVlbmNlLmRpc3RhbmNlOwoKICAgICAgICBpZiAoY3VyRGlzdCA+IG1heERpc3QpIHsKICAgICAgICAgIG1heERpc3QgPSBjdXJEaXN0OwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIG1heERpc3Q7CiAgICB9LAogICAgZ2V0VGVhbXNBdDogZnVuY3Rpb24gZ2V0VGVhbXNBdCh0ZWFtT2JqZWN0LCBjb3Vyc2UsIGtpdGNoZW5JZCkgewogICAgICB2YXIgdGVhbXNDb29raW5nVGhlcmUgPSBbXTsKCiAgICAgIGZvciAodmFyIHRlYW1JZCBpbiB0ZWFtT2JqZWN0KSB7CiAgICAgICAgaWYgKHRlYW1PYmplY3RbdGVhbUlkXVtjb3Vyc2VdID09IGtpdGNoZW5JZCkgewogICAgICAgICAgdGVhbXNDb29raW5nVGhlcmUucHVzaCh0ZWFtSWQpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHRlYW1zQ29va2luZ1RoZXJlOwogICAgfSwKICAgIGdldFNlZW5UZWFtc0ZvclRlYW06IGZ1bmN0aW9uIGdldFNlZW5UZWFtc0ZvclRlYW0odGVhbU9iamVjdCwgdGVhbUlkKSB7CiAgICAgIHZhciB0ZWFtc0F0Rmlyc3RDb3Vyc2UgPSB0aGlzLmdldFRlYW1zQXQodGVhbU9iamVjdCwgJ2ZpcnN0Q291cnNlJywgdGVhbU9iamVjdFt0ZWFtSWRdLmZpcnN0Q291cnNlKTsKICAgICAgdmFyIHRlYW1zQXRTZWNvbmRDb3Vyc2UgPSB0aGlzLmdldFRlYW1zQXQodGVhbU9iamVjdCwgJ3NlY29uZENvdXJzZScsIHRlYW1PYmplY3RbdGVhbUlkXS5zZWNvbmRDb3Vyc2UpOwogICAgICB2YXIgdGVhbXNBdFRoaXJkQ291cnNlID0gdGhpcy5nZXRUZWFtc0F0KHRlYW1PYmplY3QsICd0aGlyZENvdXJzZScsIHRlYW1PYmplY3RbdGVhbUlkXS50aGlyZENvdXJzZSk7CiAgICAgIHZhciBhbGxTZWVuVGVhbXMgPSB0ZWFtc0F0Rmlyc3RDb3Vyc2UuY29uY2F0KHRlYW1zQXRTZWNvbmRDb3Vyc2UpLmNvbmNhdCh0ZWFtc0F0VGhpcmRDb3Vyc2UpOwogICAgICByZXR1cm4gYWxsU2VlblRlYW1zLmZpbHRlcihmdW5jdGlvbiAoeCkgewogICAgICAgIHJldHVybiB4ICE9IHRlYW1JZDsKICAgICAgfSk7CiAgICB9LAogICAgaXNWYWxpZENvbmZpZzogZnVuY3Rpb24gaXNWYWxpZENvbmZpZyh0ZWFtT2JqZWN0KSB7CiAgICAgIGZvciAodmFyIHRlYW1JZCBpbiB0ZWFtT2JqZWN0KSB7CiAgICAgICAgLy8gaXMgdGVhbSBnb2luZyB0byB0aHJlZSBkaWZmZXJlbnQga2l0Y2hlbnM/CiAgICAgICAgaWYgKHRlYW1PYmplY3RbdGVhbUlkXS5maXJzdENvdXJzZSA9PSB0ZWFtT2JqZWN0W3RlYW1JZF0uc2Vjb25kQ291cnNlIHx8IHRlYW1PYmplY3RbdGVhbUlkXS5maXJzdENvdXJzZSA9PSB0ZWFtT2JqZWN0W3RlYW1JZF0udGhpcmRDb3Vyc2UpIHsKICAgICAgICAgIHJldHVybiBbZmFsc2UsICdUZWFtIGdvZXMgdG8gc2FtZSBraXRjaGVuIHR3aWNlJywgewogICAgICAgICAgICBlcnJvcjogJ2tpdGNoZW5EdXBsaWNhdGUnLAogICAgICAgICAgICB0ZWFtSWQ6IHRlYW1JZCwKICAgICAgICAgICAga2l0Y2hlbjogdGVhbU9iamVjdFt0ZWFtSWRdLmZpcnN0Q291cnNlCiAgICAgICAgICB9XTsKICAgICAgICB9CgogICAgICAgIGlmICh0ZWFtT2JqZWN0W3RlYW1JZF0uc2Vjb25kQ291cnNlID09IHRlYW1PYmplY3RbdGVhbUlkXS50aGlyZENvdXJzZSkgewogICAgICAgICAgcmV0dXJuIFtmYWxzZSwgJ1RlYW0gZ29lcyB0byBzYW1lIGtpdGNoZW4gdHdpY2UnLCB7CiAgICAgICAgICAgIGVycm9yOiAna2l0Y2hlbkR1cGxpY2F0ZScsCiAgICAgICAgICAgIHRlYW1JZDogdGVhbUlkLAogICAgICAgICAgICBraXRjaGVuOiB0ZWFtT2JqZWN0W3RlYW1JZF0uc2Vjb25kQ291cnNlCiAgICAgICAgICB9XTsKICAgICAgICB9IC8vIGlzIHRoZSBraXRjaGVuIG9mIHRoZSB0ZWFtIHVzZWQ/CgoKICAgICAgICBpZiAodGVhbUlkICE9IHRlYW1PYmplY3RbdGVhbUlkXS5maXJzdENvdXJzZSAmJiB0ZWFtSWQgIT0gdGVhbU9iamVjdFt0ZWFtSWRdLnNlY29uZENvdXJzZSAmJiB0ZWFtSWQgIT0gdGVhbU9iamVjdFt0ZWFtSWRdLnRoaXJkQ291cnNlKSB7CiAgICAgICAgICByZXR1cm4gW2ZhbHNlLCAnVGVhbSBpcyBvbmx5IGdvaW5nIHRvIG90aGVyIGtpdGNoZW5zJywgewogICAgICAgICAgICBlcnJvcjogJ25vdFVzaW5nT3duS2l0Y2hlbicsCiAgICAgICAgICAgIHRlYW1JZDogdGVhbUlkCiAgICAgICAgICB9XTsKICAgICAgICB9IC8vIGlzIHRoZSB0ZWFtIHNlZWluZyBhbm90aGVyIHRlYW0gdHdpY2U/CgoKICAgICAgICB2YXIgc2VlblRlYW1zID0gdGhpcy5nZXRTZWVuVGVhbXNGb3JUZWFtKHRlYW1PYmplY3QsIHRlYW1JZCk7CgogICAgICAgIGlmIChzZWVuVGVhbXMubGVuZ3RoIDwgNikgewogICAgICAgICAgcmV0dXJuIFtmYWxzZSwgJ1RlYW0gc2F3IGxlc3MgdGhhbiA2IG90aGVyIHRlYW1zJywgewogICAgICAgICAgICBlcnJvcjogJ2xlc3NUaGFuU2l4JywKICAgICAgICAgICAgdGVhbUlkOiB0ZWFtSWQKICAgICAgICAgIH1dOwogICAgICAgIH0gZWxzZSBpZiAoc2VlblRlYW1zLmxlbmd0aCA8IDYpIHsKICAgICAgICAgIHJldHVybiBbZmFsc2UsICdUZWFtIHNhdyBtb3JlIHRoYW4gNiBvdGhlciB0ZWFtcycsIHsKICAgICAgICAgICAgZXJyb3I6ICdtb3JlVGhhblNpeCcsCiAgICAgICAgICAgIHRlYW1JZDogdGVhbUlkCiAgICAgICAgICB9XTsKICAgICAgICB9IC8vIGNvbnNvbGUubG9nKCdTZWVuIFRlYW1zJywgdGVhbUlkLCAnOiAnLCBzZWVuVGVhbXMpIC8vZXNsaW50LWRpc2FibGUtbGluZQoKICAgICAgfQoKICAgICAgcmV0dXJuIFt0cnVlXTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/donpiano/running-dinner-solver/src/components/mixins/assignmentStats.js"],"names":["globalFunctions","assignmentStats","mixins","methods","getStatsForAssignments","teamObject","overallDist","getOverallDist","maxDist","getMaxDist","isValid","isValidConfig","console","log","overallScore","getSquareDistances","teamId","Math","pow","sequence","firstDist","secondDist","distance","curDist","getTeamsAt","course","kitchenId","teamsCookingThere","push","getSeenTeamsForTeam","teamsAtFirstCourse","firstCourse","teamsAtSecondCourse","secondCourse","teamsAtThirdCourse","thirdCourse","allSeenTeams","concat","filter","x","error","kitchen","seenTeams","length"],"mappings":"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","sourcesContent":["\nimport { globalFunctions } from \"./globalFunctions\";\n\nexport const assignmentStats = {\n  mixins: [globalFunctions],\n  methods: {\n    getStatsForAssignments(teamObject) {\n\n      // Overall Distance\n      const overallDist = this.getOverallDist(teamObject)\n\n      // Maximum Distance\n      const maxDist = this.getMaxDist(teamObject)\n\n      // Total Distance from last course to Afterpary\n\n      // Maximum Distance per way\n\n      // is valid config\n      const isValid = this.isValidConfig(teamObject)\n      if(!isValid[0]){\n        console.log(isValid) //eslint-disable-line\n      }\n\n      //const overallScore = overallDist + maxDist;\n      const overallScore = this.getSquareDistances(teamObject);\n\n      return { 'overallDist': overallDist, 'maxDist': maxDist, 'overallScore': overallScore }\n    },\n    getSquareDistances(teamObject) {\n      let overallDist = 0\n      for (var teamId in teamObject) {\n        overallDist += Math.pow(teamObject[teamId].sequence.firstDist, 2)\n        overallDist += Math.pow(teamObject[teamId].sequence.secondDist, 2)\n      }\n      return overallDist\n    },\n    getOverallDist(teamObject) {\n      let overallDist = 0\n      for (var teamId in teamObject) {\n        overallDist += teamObject[teamId].sequence.distance;\n      }\n      return overallDist\n    },\n    getMaxDist(teamObject) {\n      let maxDist = 0\n      for (var teamId in teamObject) {\n        const curDist = teamObject[teamId].sequence.distance;\n        if (curDist > maxDist) {\n          maxDist = curDist;\n        }\n      }\n      return maxDist\n    },\n    getTeamsAt(teamObject, course, kitchenId) {\n      let teamsCookingThere = []\n      for (var teamId in teamObject) {\n        if (teamObject[teamId][course] == kitchenId) {\n          teamsCookingThere.push(teamId)\n        }\n      }\n      return teamsCookingThere\n    },\n    getSeenTeamsForTeam(teamObject, teamId) {\n      const teamsAtFirstCourse = this.getTeamsAt(teamObject, 'firstCourse', teamObject[teamId].firstCourse)\n      const teamsAtSecondCourse = this.getTeamsAt(teamObject, 'secondCourse', teamObject[teamId].secondCourse)\n      const teamsAtThirdCourse = this.getTeamsAt(teamObject, 'thirdCourse', teamObject[teamId].thirdCourse)\n      const allSeenTeams = teamsAtFirstCourse.concat(teamsAtSecondCourse).concat(teamsAtThirdCourse)\n      return allSeenTeams.filter((x) => { return x != teamId })\n    },\n    isValidConfig(teamObject) {\n      for (var teamId in teamObject) {\n        // is team going to three different kitchens?\n        if (teamObject[teamId].firstCourse == teamObject[teamId].secondCourse || teamObject[teamId].firstCourse == teamObject[teamId].thirdCourse) {\n          return [false, 'Team goes to same kitchen twice', { error: 'kitchenDuplicate', teamId: teamId, kitchen: teamObject[teamId].firstCourse }]\n        }\n        if (teamObject[teamId].secondCourse == teamObject[teamId].thirdCourse) {\n          return [false, 'Team goes to same kitchen twice', { error: 'kitchenDuplicate', teamId: teamId, kitchen: teamObject[teamId].secondCourse }]\n        }\n\n        // is the kitchen of the team used?\n        if (teamId != teamObject[teamId].firstCourse && teamId != teamObject[teamId].secondCourse && teamId != teamObject[teamId].thirdCourse) {\n          return [false, 'Team is only going to other kitchens', { error: 'notUsingOwnKitchen', teamId: teamId }]\n        }\n\n        // is the team seeing another team twice?\n        const seenTeams = this.getSeenTeamsForTeam(teamObject, teamId)\n        if (seenTeams.length < 6) {\n          return [false, 'Team saw less than 6 other teams', { error: 'lessThanSix', teamId: teamId }]\n        } else if (seenTeams.length < 6) {\n          return [false, 'Team saw more than 6 other teams', { error: 'moreThanSix', teamId: teamId }]\n        }\n        // console.log('Seen Teams', teamId, ': ', seenTeams) //eslint-disable-line\n      }\n      return [true]\n    },\n  },\n}"]}]}